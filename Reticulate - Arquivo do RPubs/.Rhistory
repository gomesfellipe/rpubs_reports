list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = as.list(Quadro),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = as.list(Quadro),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = list(
c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6))
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
Quadro=Quadro%>%
as.data.frame%>%
as.list()
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = Quadro
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = Quadro
,
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
Quadro
library(plotly)
headerColor <- 'grey'
rowEvenColor <- 'lightgrey'
rowOddColor <- 'white'
library(dplyr)
library(tibble)
Quadro=as.matrix(
cbind(c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6)))%>%apply(2,as.character))
total=Quadro%>%
apply(2,function(x)sum(x=="FGV"))%>%as.numeric%>%as.character
Quadro=rbind(Quadro,total)
Quadro[nrow(Quadro),1]="-"
Quadro=Quadro%>%
as.list()
Quadro
Quadro=Quadro%>%
as.list.data.frame()
Quadro
library(plotly)
headerColor <- 'grey'
rowEvenColor <- 'lightgrey'
rowOddColor <- 'white'
library(dplyr)
library(tibble)
Quadro=as.matrix(
cbind(c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6)))%>%apply(2,as.character))
total=Quadro%>%
apply(2,function(x)sum(x=="FGV"))%>%as.numeric%>%as.character
Quadro=rbind(Quadro,total)
Quadro[nrow(Quadro),1]="-"
apply(Quadro,2,as.list)
library(plotly)
headerColor <- 'grey'
rowEvenColor <- 'lightgrey'
rowOddColor <- 'white'
library(dplyr)
library(tibble)
Quadro=as.matrix(
cbind(c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6)))%>%apply(2,as.character))
total=Quadro%>%
apply(2,function(x)sum(x=="FGV"))%>%as.numeric%>%as.character
Quadro=rbind(Quadro,total)
Quadro[nrow(Quadro),1]="-"
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = list(
c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6))
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
total
names(total)
names(total)=c("Hora","Segunda", "Terça", "Quarta", "Quinta", "Sexta")
names(total)
total
library(plotly)
headerColor <- 'grey'
rowEvenColor <- 'lightgrey'
rowOddColor <- 'white'
library(dplyr)
library(tibble)
Quadro=as.matrix(
cbind(c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6)))%>%apply(2,as.character))
total=Quadro%>%
apply(2,function(x)sum(x=="FGV"))%>%as.numeric%>%as.character
names(total)=c("Hora","Segunda", "Terça", "Quarta", "Quinta", "Sexta")
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = list(
c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",6))
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = list(
c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-"),
c("-","UFF","UFF","Volta+Almoço","FGV","FGV","FGV","FGV","FGV","FGV","FGV"),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-"),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-")
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
plot_ly(
type = 'table',
header = list(
values = list(list('<b> </b>'),
list('<b>Segunda</b>'),
list('<b>Terça</b>'),
list('<b>Quarta</b>'),
list('<b>Quinta</b>'),
list('<b>Sexta</b>')),
line = list(color = '#506784'),
fill = list(color = headerColor),
align = c('center','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = list(
c("8-9","9-10","10-11","11-12","12-13","13-14","14-15","15-16","16-17","17-18","18-19"),
c("-","UFF","UFF","UFF (Monografia)","Volta+Almoço",rep("FGV",6)),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-"),
c("-","UFF","UFF","Volta+Almoço",rep("FGV",7)),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-"),
c(rep("FGV",4),"Almoço",rep("FGV",5),"-")
),
line = list(color = '#506784'),
fill = list(color = list(c(rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor,
rowOddColor,rowEvenColor,rowOddColor,
rowEvenColor,rowOddColor,rowEvenColor
))),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 11)
))
#Instalando direto do CRAN:
install.packages("gtrendsR")
library(gtrendsR)
data_scientist <- gtrends(c("Aprendizado de Máquina", "Big Data", "R Linguagem de programação", "Estatística"),
geo = c("BR"),    #default para todo o mundo, podemos utilizar também: c("BR", "US")
time = "2004-01-01 2018-01-04",  #Data inicial Data final
gprop = c("web"), #Opções: "news","images", "froogle", "youtube"
category = 0,     #Zero é defaul, uma lista de categorias pode ser conferida abaixo
hl = "pt-BR"
)
ajuste_com_sazonalidade_Estatistica<-HoltWinters(ts_Estatistica)
plot(ajuste_com_sazonalidade_Estatistica)
suppressMessages(library(gtrendsR))
suppressMessages(library(dplyr))
suppressMessages(library(knitr))
suppressMessages(library(kableExtra))
suppressMessages(library(ggseas))
library(gtrendsR)
data_scientist <- gtrends(c("Aprendizado de Máquina", "Big Data", "R Linguagem de programação", "Estatística"),
geo = c("BR"),    #default para todo o mundo, podemos utilizar também: c("BR", "US")
time = "2004-01-01 2018-01-04",  #Data inicial Data final
gprop = c("web"), #Opções: "news","images", "froogle", "youtube"
category = 0,     #Zero é defaul, uma lista de categorias pode ser conferida abaixo
hl = "pt-BR"
)
kable(data_scientist, "html")%>%
kable_styling(bootstrap_options = "striped", position = "left",
font_size = 13, full_width = T) %>%
scroll_box(width = "800px", height = "300px")
library(ggplot2)
data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits))%>%
ggplot(aes(x=date,y=hits,colour=keyword))+
geom_line()+theme_bw()+
labs(y="Popularidade",x="Ano",colour="Termo de pesquisa:", title="Série temporal da popularidade dos termos de pesquisas")
ts_Estatistica=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits))%>%
filter(keyword=="Estatística")%>%
select(hits)%>%
na.omit()%>%
ts(freq=12)
ts_dec_Estatistica=decompose(ts_Estatistica)
ts_BigData=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits))%>%
filter(keyword=="Big Data")%>%
select(hits)%>%
na.omit()%>%
ts(freq=12)
ts_dec_BigData=decompose(ts_BigData)
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=4)+geom_line()
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=4)+geom_line()
data_scientist$interest_over_time
data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit
data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=4)+geom_line()
data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=4)+geom_line()
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
as.data.frame%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=4)+geom_line()
ts_dec_BigData
data=data.frame(cbind(serie=as.numeric(ts_Estatistica),mes_ano=rep(seq(1,12),11)))
kruskal.test(data=data,serie~mes_ano)
data=data.frame(cbind(serie=as.numeric(ts_BigData),mes_ano=rep(seq(1,12),11)))
kruskal.test(data=data,serie~mes_ano)
ajuste_com_sazonalidade_Estatistica<-HoltWinters(ts_Estatistica)
plot(ajuste_com_sazonalidade_Estatistica)
library(forecast)
library(forecast)
previsao_com_sazonalidade<-forecast(ajuste_com_sazonalidade,h = 12)
previsao_com_sazonalidade_Estatistica<-forecast(ajuste_com_sazonalidade_Estatistica,h = 12)
plot(previsao_com_sazonalidade_Estatistica)
data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=12)+geom_line()
g1=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate("hits"=as.numeric(hits),"date"=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter(keyword=="Estatística" )%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=12)+geom_line()
g2=data_scientist$interest_over_time%>%
as_tibble()%>%
mutate(hits=as.numeric(hits),date=as.Date(date),keyword=as.factor(keyword))%>%
na.omit%>%
filter( keyword=="Big Data")%>%
ggsdc(aes(x=date,y=hits),
method="stl",s.window=7,frequency=12)+geom_line()
system("python \"C:/Users/gomes/OneDrive/Área de Trabalho/teste.py\"")
system("python \"C:/Users/gomes/OneDrive/Área de Trabalho/teste.py\"")
system("python \"C:/Users/gomes/OneDrive/Área de Trabalho/teste.py\"")
install.packages("revealjs")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_engines$set(python = reticulate::eng_python)
require(reticulate)
require(dplyr)
##essa linha e so para definir o python que esta habilitado no seu computador
# use_python(Sys.which("python")%>% as.character())
# Chunk em R
library(ggplot2)
ggplot(py$iris, aes(Sepal.Length, Sepal.Width, col=Species))+
geom_point()+
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_engines$set(python = reticulate::eng_python)
require(reticulate)
require(dplyr)
##essa linha e so para definir o python que esta habilitado no seu computador
# use_python(Sys.which("python")%>% as.character())
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_engines$set(python = reticulate::eng_python)
require(reticulate)
require(dplyr)
##essa linha e so para definir o python que esta habilitado no seu computador
# use_python(Sys.which("python")%>% as.character())
rsconnect::deployApp("reticulate.Rmd",account = "gomesfellipe")
setwd("C:/Users/gomes/Dropbox/RPubs/Reticulate - Arquivo do RPubs")
setwd("C:/Users/gomes/Dropbox/RPubs/Reticulate - Arquivo do RPubs")
rsconnect::deployApp("reticulate.Rmd",account = "gomesfellipe")
rsconnect::deployApp("teste.Rmd",account = "gomesfellipe")
